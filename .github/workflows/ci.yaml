name: ci

on: [push, pull_request]

jobs:
  ci:
    name: ci
    runs-on: macos-14
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install requirements
        run: brew install go meson ninja nasm make

      - name: Print tool versions
        run: gmake tool-versions

      - name: Determine version
        id: version
        run: |
          case "${GITHUB_REF}" in
          refs/tags/*)
            VERSION=${GITHUB_REF#refs/tags/}
            ;;
          *)
            VERSION=develop
            ;;
          esac

          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo ${VERSION}

      - name: Build
        # macOS runners have unknown resource limits (timeout or number of open
        # filesâ€¦) that prevent the execution of a single Makefile rule that
        # manages all builds. So the time per rule must be limited.
        run: |
          VERSION=${{ steps.version.outputs.version }}
          gmake build/output/ffmpeg-libs_${VERSION}_ios-arm64-audio-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_ios-arm64-audio-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_ios-arm64-audio-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_ios-arm64-video-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_ios-arm64-video-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_ios-arm64-video-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-amd64-audio-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-amd64-audio-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-amd64-audio-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-amd64-video-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-amd64-video-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-amd64-video-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-arm64-audio-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-arm64-audio-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-arm64-audio-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-arm64-video-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-arm64-video-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-arm64-video-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-universal-audio-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-universal-audio-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-universal-audio-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-universal-video-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-universal-video-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_iossimulator-universal-video-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-amd64-audio-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-amd64-audio-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-amd64-audio-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-amd64-video-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-amd64-video-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-amd64-video-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-arm64-audio-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-arm64-audio-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-arm64-audio-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-arm64-video-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-arm64-video-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-arm64-video-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-universal-audio-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-universal-audio-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-universal-audio-encodersgpl.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-universal-video-default.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-universal-video-full.tar.gz
          gmake build/output/ffmpeg-libs_${VERSION}_macos-universal-video-encodersgpl.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_ios-universal-audio-default.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_ios-universal-audio-full.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_ios-universal-audio-encodersgpl.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_ios-universal-video-default.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_ios-universal-video-full.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_ios-universal-video-encodersgpl.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_macos-universal-audio-default.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_macos-universal-audio-full.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_macos-universal-audio-encodersgpl.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_macos-universal-video-default.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_macos-universal-video-full.tar.gz
          gmake build/output/ffmpeg-xcframeworks_${VERSION}_macos-universal-video-encodersgpl.tar.gz
          gmake build/output/debug.zip

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          path: |
            build/output/debug.zip
            build/output/*.tar.gz

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: |
            build/output/debug.zip
            build/output/*.tar.gz
